if game:GetService("ReplicatedStorage").GameData.Floor.Value == "Fools" and game:GetService("ReplicatedStorage").EntityInfo.Name == "EntityInfo" then
game:GetService("ReplicatedStorage").EntityInfo.Name = "RemotesFolder"
end
local RemotesFolder = game:GetService("ReplicatedStorage").RemotesFolder
local Repository = "https://raw.githubusercontent.com/Cold-Script/LinoriaLib/refs/heads/patch-3/"
local Library = loadstring(game:HttpGet(Repository .. "Library.lua"))()
local ThemeManager = loadstring(game:HttpGet(Repository .. "addons/ThemeManager.lua"))()
local SaveManager = loadstring(game:HttpGet(Repository .. "addons/SaveManager.lua"))()
local Window = Library:CreateWindow({
    Title = "• WinterClaws | " .. game.Players.LocalPlayer.Name .. "•",
    Center = true,
    AutoShow = true,
    Resizable = true,
    ShowCustomCursor = true,
    NotifySide = "Right",
    TabPadding = 2,
    MenuFadeTime = 0
})
local Tabs = {
  Main = Window:AddTab("Main"),
  Players = Window:AddTab("Players"),
  Exploits = Window:AddTab("Exploits"),
  Visual = Window:AddTab("Visual"),
  Configs = Window:AddTab("Configs")
}
local Main = Tabs.Main:AddLeftTabbox()
local Misc = Stats:AddTab("-Misc-")
local Automation = Stats:AddTab("-Automation-")
Misc:AddDropdown("MyDropdown",{
	Values = {"Lobby","Leave","Revive"},
	Default = "", 
	Multi = false,
	Text = 'Select On Death',
	Callback = function(v)
_G.SelectMisc = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.EnabledOnDeath then
if game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 and _G.SelectMisc == "Lobby" then
RemotesFolder.Lobby:FireServer()
elseif game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 and _G.SelectMisc == "Leave" then
game:Shutdown()
elseif game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 and _G.SelectMisc == "Revive" then
RemotesFolder.Revive:FireServer()
end
end
end)
end})
Misc:AddToggle("MyToggle",{
Text = "Death",
Default = false,
Callback = function(v)
_G.EnabledOnDeath = v
end})







