if game:GetService("ReplicatedStorage").GameData.Floor.Value == "Fools" and game:GetService("ReplicatedStorage").EntityInfo.Name == "EntityInfo" then
game:GetService("ReplicatedStorage").EntityInfo.Name = "RemotesFolder"
end
local RemotesFolder = game:GetService("ReplicatedStorage").RemotesFolder
local Repository = "https://raw.githubusercontent.com/Cold-Script/LinoriaLib/refs/heads/patch-3/"
local Library = loadstring(game:HttpGet(Repository .. "Library.lua"))()
local ThemeManager = loadstring(game:HttpGet(Repository .. "addons/ThemeManager.lua"))()
local SaveManager = loadstring(game:HttpGet(Repository .. "addons/SaveManager.lua"))()
local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/Cold-Script/Warning/refs/heads/main/Warning.lua"))()
Notification:Notify("Loading...")
wait(3)
local Window = Library:CreateWindow({
    Title = "• WinterClaws | " .. game.Players.LocalPlayer.Name .. " •",
    Center = true,
    AutoShow = true,
    Resizable = true,
    ShowCustomCursor = true,
    NotifySide = "Right",
    TabPadding = 2,
    MenuFadeTime = 0
})
local Tabs = {
  Main = Window:AddTab("Main"),
  Players = Window:AddTab("Players"),
  Exploits = Window:AddTab("Exploits"),
  Visual = Window:AddTab("Visual"),
  Configs = Window:AddTab("Configs")
}
local MainI = Tabs.Main:AddLeftTabbox()
local Misc = MainI:AddTab("-Misc-")
local Automation = MainI:AddTab("-Automation-")
Misc:AddDropdown("MyDropdown",{
	Values = {"Lobby","Leave","Revive"},
	Default = "", 
	Multi = false,
	Text = 'Select On Death',
	Callback = function(v)
_G.SelectMisc = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.EnabledOnDeath then
if game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 and _G.SelectMisc == "Lobby" then
RemotesFolder.Lobby:FireServer()
elseif game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 and _G.SelectMisc == "Leave" then
game:Shutdown()
elseif game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 and _G.SelectMisc == "Revive" then
RemotesFolder.Revive:FireServer()
end
end
end)
end})
Misc:AddToggle("MyToggle",{
Text = "Death",
Default = false,
Callback = function(v)
_G.EnabledOnDeath = v
end})
Misc:AddDivider()
game:GetService("RunService").RenderStepped:Connect(function()
pcall(function()
if _G.FastDoors then game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Door"):SetAttribute("FastOpen", true)
end 
end)
end)
Misc:AddToggle("MyToggle",{
Text = "Doors Fast",
Default = false,
Callback = function(v)
_G.FastDoors = v
end})
game:GetService("RunService").RenderStepped:Connect(function()
pcall(function()
if _G.RemoteDoors then game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Door").ClientOpen:FireServer()
end 
end)
end)
Misc:AddToggle("MyToggle",{
Text = "Doors Reach",
Default = false,
Callback = function(v)
_G.RemoteDoors = v
end})
Misc:AddDivider()
Misc:AddToggle("MyToggle",{
Text = "Through Interact",
Default = false,
Callback = function(v)
_G.ThroughInteract = v
if _G.ThroughInteract then
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.RequiresLineOfSight = false
end
end
ThroughInteract = workspace.CurrentRooms.ChildAdded:Connect(function(v)
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.RequiresLineOfSight = false
end
end
end)
else
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.RequiresLineOfSight = true
end
end
ThroughInteract:Disconnect()
end
end})
Misc:AddToggle("MyToggle",{
Text = "Reach",
Default = false,
Callback = function(v)
_G.RemoteInteract = v
if _G.RemoteInteract then
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.MaxActivationDistance = _G.MaxReach or 7.5
end
end
RemoteInteract = workspace.CurrentRooms.ChildAdded:Connect(function(v)
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.MaxActivationDistance = _G.MaxReach or 7.5
end
end
end)
else
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.MaxActivationDistance = 7.5
end
end
RemoteInteract:Disconnect()
end
end})
Misc:AddSlider("MySlider",{
Text = "Max Reach",
Min = 7.5,
Default = 7.5,
Max = 15,
Rounding = 1,
Compact = true,
Callback = function(v)
_G.MaxReach = v
end})
Automation:AddToggle("MyToggle",{
Text = "Auto Breaker",
Default = false,
Callback = function(v)
_G.AutoBreaker = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.AutoBreaker then
game:GetService("ReplicatedStorage").RemotesFolder.EBF:FireServer()
end
end)
end})
Automation:AddDivider()
Automation:AddToggle("MyToggle",{
Text = "Auto Padlock Unlock",
Default = false,
Callback = function(v)
game:GetService("RunService").RenderStepped:Connect(function()
if _G.AutoPadlock then
local Padlock = workspace.CurrentRooms["50"].Door:FindFirstChild("Padlock")
if Padlock then
if (game.Players.LocalPlayer.Character.Collision.Position - Padlock.Main.Position).Magnitude < _G.PadlockDistance then
RemotesFolder.PL:FireServer()
end
end
end
end)
end})
Automation:AddSlider("MySlider",{
Text = "Padlock Distance",
Min = 50,
Default = 50,
Max = 100,
Rounding = 1,
Compact = true,
Callback = function(v)
_G.PadlockDistance = v
end})
local MainII = Tabs.Main:AddRightTabbox()
local World = MainII:AddTab("-World-")
game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("MoveDirection"):Connect(function()
if _G.ClosetsExitFix and game.Players.LocalPlayer.Character:GetAttribute("Hiding")==true then 
game:GetService("ReplicatedStorage").EntityInfo.CamLock:FireServer()
end 
end)
World:AddToggle("MyToggle",{
Text = "Closets Exit Fix",
Default = false,
Callback = function(v)
_G.ClosetsExitFix = v
end})
World:AddDivider()
World:AddToggle("MyToggle",{
Text = "Delete Live Sanity",
Default = false,
Callback = function(v)
_G.NoLiveSanity = v
while _G.NoLiveSanity do wait(1)
for _,v in workspace.CurrentCamera:GetChildren() do
if v.Name == "LiveSanity" and workspace:FindFirstChild("EntityModel") then
v.Enabled = not _G.NoLiveSanity
end
end
end
end})
World:AddToggle("MyToggle",{
Text = "Delete Void Roblox",
Default = false,
Callback = function(v)
if v then
workspace.FallenPartsDestroyHeight = 0 / 0
else
workspace.FallenPartsDestroyHeight = -50000
end
end})
World:AddDivider()
_G.AlertVolume = 5
World:AddToggle("MyToggle",{
Text = "Alert Entity",
Default = false,
Callback = function(v)
if v then
local Entity = {"SeekNewCloneMoving","SeekMoving","BackdoorLookman","BackdoorRush","GloombatSwarm","Eyes","JeffTheKiller","RushMoving","AmbushMoving","Snare","A60","A120"}
NotificationEntity = workspace.ChildAdded:Connect(function(v)
if table.find(Entity,v.Name) then
repeat task.wait() until game.Players.LocalPlayer:DistanceFromCharacter(v:GetPivot().Position) < 750 or not v:IsDescendantOf(workspace)
if v:IsDescendantOf(workspace) then
if v.Name == "RushMoving" then
Notification:Notify("Entity 'Rush' has spawn,\nhide in closets now!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "AmbushMoving" then
Notification:Notify("Entity 'Ambush' has spawn,\nhide in closets now!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "A60" then
Notification:Notify("Entity 'A60' has spawn,\nhide in a locker!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "A120" then
Notification:Notify("Entity 'A120' has spawn,\nhide in a locker!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "JeffTheKiller" then
Notification:Notify("Entity 'JeffTheKiller' has spawn,\ncareful with it!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "Eyes" then
Notification:Notify("Entity 'Eyes' has spawn,\ndont look at it!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "GloombatSwarm" then
Notification:Notify("Entity 'Gloombat Swarm' has spawn,\noff light to survival!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "BackdoorRush" then
Notification:Notify("Entity 'Blitz' has spawn,\nhide in closets now!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "BackdoorLookman" then
Notification:Notify("Entity 'Lookman' has spawn,\nlook under side!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "SeekMoving" then
Notification:Notify("Seek Chase,\ngoodluck for you in chase!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "SeekNewCloneMoving" then
Notification:Notify("Seek Chase,\ngoodluck for you in chase!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
end
end
end
end)
else
NotificationEntity:Disconnect()
end
end})
World:AddToggle("MyToggle",{
Text = "Alert Sound",
Default = false,
Callback = function(v)
_G.SoundAlert = v
end})
World:AddSlider("MySlider",{
Text = "Volume Alert",
Min = 0,
Default = 5,
Max = 10,
Rounding = 1,
Compact = true,
Callback = function(v)
_G.AlertVolume = v
end})
local PlayersI = Tabs.Players:AddRightTabbox()
local Character = MainII:AddTab("-Character-")
Character:AddSlider("MySlider",{
Text = "Speed Boost",
Min = 0,
Default = 5,
Max = 10,
Rounding = 1,
Compact = true,
Callback = function(v)
_G.AlertVolume = v
end})
